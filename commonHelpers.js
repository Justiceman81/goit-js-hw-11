import{S as a,i as l}from"./assets/vendor-8c59ed88.js";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const c of r.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&t(c)}).observe(document,{childList:!0,subtree:!0});function s(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function t(e){if(e.ep)return;e.ep=!0;const r=s(e);fetch(e.href,r)}})();const d=new a(".gallery a");document.querySelector(".img-list");function m(i){const o=n.imgGallery,s=i.hits.map(t=>`<li class="list-el">
                <a href="${t.largeImageURL}"><img src='${t.webformatURL}' alt='${t.tags}'></a>
                <div class="content">
                    <div class="item"><h3>Likes</h3><p>${t.likes}</p></div>
                    <div class="item"><h3>Views</h3><p>${t.views}</p></div>
                    <div class="item"><h3>Comments</h3><p>${t.comments}</p></div>
                    <div class="item"><h3>Downloads</h3><p>${t.downloads}</p></div>
                </div>
            </li>`).join("");o.innerHTML=s,d.refresh()}function u(){n.loader.classList.remove("hidden")}function f(){n.loader.classList.add("hidden")}function h(i){const o="https://pixabay.com",s="/api/",t=new URLSearchParams({key:"44348563-8832aea6e55efd6ddd80494f7",q:`${i}`,image_type:"photo",orientation:"horizontal",safesearch:!0}),e=`${o}${s}?${t}`;return fetch(e).then(r=>{if(r.ok)return r.json();throw new Error(r.status)})}const n={formEl:document.querySelector(".form-el"),inputEl:document.querySelector(".input-search"),imgGallery:document.querySelector(".gallery"),loader:document.querySelector(".loader")};n.formEl.addEventListener("submit",i=>{i.preventDefault();const o=i.currentTarget.search.value.trim();if(!o){l.error({message:"Info Search input must be filled!"});return}u(),h(o).then(s=>{if(s.length===0)throw new Error("Error! Nothing to load");m(s)}).catch(s=>{l.error({title:"Sorry,",message:"there are no images matching your search query. Please try again!",color:"red"})}).finally(()=>{f(),n.formEl.reset()})});
//# sourceMappingURL=commonHelpers.js.map
